// ********* В JavaScript есть 8 основных типов. ***********

// number для любых чисел: целочисленных или чисел с плавающей точкой; целочисленные значения ограничены диапазоном ±(253-1).
// bigint для целых чисел произвольной длины.
// string для строк. Строка может содержать ноль или больше символов, нет отдельного символьного типа.
// boolean для true/false.
// null для неизвестных значений – отдельный тип, имеющий одно значение null.
// undefined для неприсвоенных значений – отдельный тип, имеющий одно значение undefined.
// object для более сложных структур данных.
// symbol для уникальных идентификаторов.

// ********** Object ***********
// B JavaScript существует 8 типов данных. Семь из них называются «примитивными», 
// так как содержат только одно значение (будь то строка, число или что-то другое). 
// Object - это коллекция которая может содержать множество ключей и значений.

// Пустой объект («пустой ящик») можно создать, используя один из двух вариантов синтаксиса:

let user = new Object(); // синтаксис "конструктор объекта"
let user2 = {
    name: 'john',
    age: 32,
    "likes birds": true  // имя свойства из нескольких слов должно быть в кавычках
};  // синтаксис "литерал объекта"
// что бы обратиться к "likes birds" мы должны использовать квадратные скобки []
console.log(user2['likes birds'])

// ************ delete: ****************
// Для удаления свойства мы можем использовать оператор delete:
delete user.age;

// Также существует специальный оператор "in" для проверки существования свойства в объекте.

let userIn = { name: "John", age: 30 };
console.log( "age" in userIn ); // true, user.age существует
console.log( "blabla" in userIn ); // false, user.blabla не существует

// В большинстве случаев прекрасно сработает сравнение с undefined. Но есть особый случай, когда оно не подходит, и нужно использовать "in".
// Это когда свойство существует, но содержит значение undefined:
let obj = {
    test: undefined
  };

// ************* Цикл «for…in» *************
// Для перебора всех свойств объекта используется цикл for..in

let userFor = {
    name: "John",
    age: 30,
    isAdmin: true
  };
  
  for (let key in userFor) {
    // ключи
    console.log( key );  // name, age, isAdmin
    // значения ключей
    console.log( userFor[key] ); // John, 30, true
  }