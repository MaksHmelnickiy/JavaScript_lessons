// Promise – это специальный объект, который содержит своё состояние. Вначале pending («ожидание»), 
// затем – одно из: fulfilled («выполнено успешно») или rejected («выполнено с ошибкой»).


// На promise можно навешивать колбэки двух типов:

// onFulfilled – срабатывают, когда promise в состоянии «выполнен успешно».
// onRejected – срабатывают, когда promise в состоянии «выполнен с ошибкой».

var promisetTEST = new Promise(function(resolve, reject) {
    // Эта функция будет вызвана автоматически
  
    // В ней можно делать любые асинхронные операции,
    // А когда они завершатся — нужно вызвать одно из:
    // resolve(результат) при успешном выполнении
    // reject(ошибка) при ошибке
})

// onFulfilled сработает при успешном выполнении
promise.then(onFulfilled)
// onRejected сработает при ошибке
promise.then(null, onRejected)


// .catch
// Для того, чтобы поставить обработчик только на ошибку, вместо .then(null, onRejected) можно написать .catch(onRejected) – это то же самое.

// Синхронный throw – то же самое, что reject
// Если в функции промиса происходит синхронный throw (или иная ошибка), то вызывается reject:
