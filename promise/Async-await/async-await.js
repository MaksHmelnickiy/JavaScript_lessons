// У слова ⁡⁢⁣⁣​‌‌‍async​⁡⁡ один простой смысл: эта функция всегда ​‌‍‌⁡⁢⁣⁣возвращает промис⁡​. 
// Значения других типов оборачиваются в завершившийся ⁡⁢⁣⁣успешно промис⁡ автоматически.

// При работе с ⁡⁢⁣⁣async/await⁡ можно ⁡⁢⁣⁢обходиться без⁡ ⁡⁢⁣⁣promise.then/catch⁡, иногда всё-таки приходится использовать эти методы (на верхнем уровне вложенности, например). 

async function f() { // ⁡⁣⁣⁢оборачивает⁡ его ⁡⁢⁣⁣в Promise⁡ /
  return new Error('hello');
}
f().then(console.log); // 1 // .


// ​‌‌‍⁡⁢⁣⁣await​⁡ - работает только ⁡⁣⁣⁢внутри async–функций⁡ /
// ⁡⁢⁣⁣await⁡ ⁡⁢⁣⁢нельзя⁡ использовать в⁡⁣⁣⁢ обычных функциях⁡ /
// ⁡⁢⁣⁣await⁡ ⁡⁢⁣⁢нельзя⁡ использовать ⁡⁣⁣⁢на верхнем уровне вложенности⁡ /

// Ключевое слово⁡⁢⁣⁣ await⁡ заставляет ⁡⁣⁣⁢интерпретатор JavaScript ждать⁡ до тех пор, пока ⁡⁢⁣⁣промис⁡ ⁡⁣⁣⁢справа от⁡⁢⁣⁣ await⁡ ⁡⁣⁣⁢не выполнится⁡ .
